{"version":3,"file":"static/js/881.8c7994a9.chunk.js","mappings":"mLAEMA,EAAU,mCACVC,EAAU,+BAEHC,EAAa,SAACC,GAAoB,IAAdC,EAAa,uDAAP,GACnC,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,GAAQ,CACxBF,QAAAA,EACAK,OAAQ,CACJN,QAAAA,EACAI,MAAAA,IAGX,C,qICZD,EAA4B,0BAA5B,EAA8D,sB,kBC+C9D,EAxCe,SAAC,GAAyB,IAAvBG,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,MACxB,GAA0BI,EAAAA,EAAAA,eAASC,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAaH,EAAaI,IAAI,SAC9BC,GAAQC,EAAAA,EAAAA,UAkBd,OAhBAC,EAAAA,EAAAA,YAAU,WACFJ,IAAYE,EAAMG,QAAQC,MAAQN,EACzC,KAEDI,EAAAA,EAAAA,YAAU,WACDhB,IACL,iBAAC,gHAEyCF,EAAAA,EAAAA,GAAW,gBAAiBE,GAFrE,gBAEsBmB,EAFtB,EAEeC,KAAOD,QACfZ,EAASY,GAHhB,gDAKOE,QAAQC,IAAR,MALP,gEAAD,EAQH,GAAE,CAACtB,KAGA,iBAAKuB,UAAWC,EAAhB,WACI,kBAAMrB,SAAUA,EAAhB,WACI,kBAAOoB,UAAWC,EAAWC,IAAKX,EAAOY,KAAK,OAAOC,KAAK,UAC1D,mBAAQA,KAAK,SAAb,wBAEJ,wBACKrB,GAASA,EAAMsB,KAAI,SAACC,GAAD,OAChB,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAMC,MAAO,CAACC,KAAMvB,GAA5C,SAAwDmB,EAAGK,kBADtDL,EAAGE,GADI,QAQnC,C","sources":["API/fetchFilms.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst api_key = '9964dddb79a4e585f42d3b6de3c6326e';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = (path, query='') => {\n    return axios.get(`${path}`, {\n        baseURL,\n        params: {\n            api_key,\n            query\n        },\n    });\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"input\":\"Movies_input__KrUqs\"};","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from './Movies.module.css';\n\nimport { fetchFilms } from 'API/fetchFilms';\n\nconst Movies = ({ onSubmit, query }) => {\n    const [films, setFilms] = useState(undefined);\n    const [searchParams] = useSearchParams();\n    const location = useLocation();\n    const queryParam = searchParams.get('query');\n    const input = useRef();\n\n    useEffect(() => {\n        if (queryParam) input.current.value = queryParam;\n    });\n\n    useEffect(() => {\n        if (!query) return;\n        (async () => {\n            try {\n                const { data: {results} } = await fetchFilms(`/search/movie`, query);\n                setFilms(results);\n            } catch (error) {\n                console.log(error);\n            };\n        })();\n    }, [query]);\n\n    return (\n        <div className={css.container}>\n            <form onSubmit={onSubmit}>\n                <input className={css.input} ref={input} name='text' type=\"text\" />\n                <button type=\"submit\">Search</button>\n            </form>\n            <ul>\n                {films && films.map((el) => (\n                    <li key={el.id}>\n                        <Link to={`/movies/${el.id}`} state={{from: location}}>{el.original_title}</Link>       \n                    </li>   \n                ))}\n            </ul>\n        </div>\n        );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    query: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.bool.isRequired\n  ]),\n};"],"names":["api_key","baseURL","fetchFilms","path","query","axios","params","onSubmit","useState","undefined","films","setFilms","useSearchParams","searchParams","location","useLocation","queryParam","get","input","useRef","useEffect","current","value","results","data","console","log","className","css","ref","name","type","map","el","to","id","state","from","original_title"],"sourceRoot":""}