{"version":3,"file":"static/js/135.e006ed06.chunk.js","mappings":"mLAEMA,EAAU,mCACVC,EAAU,+BAEHC,EAAa,SAACC,GAAoB,IAAdC,EAAa,uDAAP,GACnC,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,GAAQ,CACxBF,QAAAA,EACAK,OAAQ,CACJN,QAAAA,EACAI,MAAAA,IAGX,C,qICZD,EAA4B,gCAA5B,EAAmE,2BAAnE,EAA4G,kCAA5G,EAA4J,kC,kBCqD5J,EA/CqB,WAAO,IAAD,IACvB,GAAsCG,EAAAA,EAAAA,UAAS,CAAEC,OAAQ,KAAzD,eAAOC,EAAP,KAAoBC,EAApB,KACOC,GAAUC,EAAAA,EAAAA,MAAVD,OAEDE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAa7C,OAXAC,EAAAA,EAAAA,YAAU,YACN,iBAAC,gHAE8Bf,EAAAA,EAAAA,GAAW,UAAD,OAAWS,IAFnD,gBAEeO,EAFf,EAEeA,KACRR,EAAeQ,GAHtB,gDAKOC,QAAQC,IAAR,MALP,gEAAD,EAQH,GAAE,CAACT,KAGA,iCACI,iBAAKU,UAAWC,EAAhB,WACI,SAAC,KAAD,CAAMD,UAAWC,EAAUC,GAAIV,EAA/B,sBACA,iBAAKQ,UAAWC,EAAhB,WACI,gBAAKE,IAAG,yCAAoCf,EAAYgB,aAAeC,IAAI,MAC3E,iBAAKL,UAAWC,EAAhB,WACI,0BAAKb,EAAYkB,eAAjB,KAAmC,IAAIC,KAAKnB,EAAYoB,cAAcC,cAAtE,QACA,wCAAgBC,KAAKC,MAAiC,GAA3BvB,EAAYwB,cAAvC,QACA,sCACA,uBAAIxB,EAAYyB,YAChB,oCACA,uBAAIzB,EAAYD,OAAO2B,KAAI,SAACC,GAAD,OAAOA,EAAGC,IAAV,IAAgBC,KAAK,iBAI5D,iBAAKjB,UAAWC,EAAhB,WACI,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMC,GAAE,OAAUR,MAAO,CAACC,KAAMH,GAAhC,qBACJ,yBAAI,SAAC,KAAD,CAAMU,GAAE,UAAaR,MAAO,CAACC,KAAMH,GAAnC,8BAGZ,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C","sources":["API/fetchFilms.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst api_key = '9964dddb79a4e585f42d3b6de3c6326e';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = (path, query='') => {\n    return axios.get(`${path}`, {\n        baseURL,\n        params: {\n            api_key,\n            query\n        },\n    });\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"link\":\"MovieDetails_link__U+v+7\",\"filmDetails\":\"MovieDetails_filmDetails__KrjEG\",\"description\":\"MovieDetails_description__33mrB\"};","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport css from './MovieDetails.module.css';\n\nimport { fetchFilms } from 'API/fetchFilms';\n\nconst MovieDetails = () => {\n    const [filmDetails, setFilmDetails] = useState({ genres: []});\n    const {filmId} = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const { data } = await fetchFilms(`/movie/${filmId}`);\n                setFilmDetails(data);\n            } catch (error) {\n                console.log(error);\n            };\n        })();\n    }, [filmId]);\n\n    return (\n        <>\n            <div className={css.container}>\n                <Link className={css.link} to={backLinkHref}>Go back</Link>\n                <div className={css.filmDetails}>\n                    <img src={`https://image.tmdb.org/t/p/w200${filmDetails.poster_path}`} alt=\"\" />\n                    <div className={css.description}>\n                        <h2>{filmDetails.original_title} ({new Date(filmDetails.release_date).getFullYear()})</h2>\n                        <p>User score: {Math.round(filmDetails.vote_average * 10)}%</p>\n                        <h3>Overview</h3>\n                        <p>{filmDetails.overview}</p>\n                        <h3>Genres</h3>\n                        <p>{filmDetails.genres.map((el)=> el.name).join(' ')}</p>\n                    </div>\n                </div>\n            </div>\n            <div className={css.container}>\n                <h4>Additional information</h4>\n                <ul>\n                    <li><Link to={`cast`} state={{from: backLinkHref}}>Cast</Link></li>\n                    <li><Link to={`reviews`} state={{from: backLinkHref}}>Reviews</Link></li>\n                </ul>\n            </div>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetails;"],"names":["api_key","baseURL","fetchFilms","path","query","axios","params","useState","genres","filmDetails","setFilmDetails","filmId","useParams","backLinkHref","useLocation","state","from","useEffect","data","console","log","className","css","to","src","poster_path","alt","original_title","Date","release_date","getFullYear","Math","round","vote_average","overview","map","el","name","join","Suspense","fallback"],"sourceRoot":""}