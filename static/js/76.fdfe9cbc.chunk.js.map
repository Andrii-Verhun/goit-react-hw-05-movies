{"version":3,"file":"static/js/76.fdfe9cbc.chunk.js","mappings":"kLAEMA,EAAU,mCACVC,EAAU,+BAEHC,EAAa,SAACC,GAAoB,IAAdC,EAAa,uDAAP,GACnC,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,GAAQ,CACxBF,QAAAA,EACAK,OAAQ,CACJN,QAAAA,EACAI,MAAAA,IAGX,C,4HCZD,EAA4B,wBAA5B,EAA8D,sB,kBCsC9D,EAhCa,WACT,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAUC,EAAAA,EAAAA,MAAVD,OAeP,OAbAE,EAAAA,EAAAA,YAAU,YACN,iBAAC,kHAEwCV,EAAAA,EAAAA,GAAW,UAAD,OAAWQ,EAAX,aAFlD,gBAEuBF,EAFvB,EAEeK,KAAQL,KACVM,EAAUN,EAAKO,OAAO,EAAG,IAC/BN,EAAQK,GAJf,gDAMOE,QAAQC,IAAR,MANP,gEAAD,EASH,GAAE,CAACP,KAIA,gBAAKQ,UAAWC,EAAhB,SACqB,IAAhBX,EAAKY,QAAe,4CAA0B,wBAC1CZ,EAAKa,KAAI,SAACC,GAAD,OACN,2BACI,gBAAKJ,UAAWC,EAAaI,IAAG,yCAAoCD,EAAGE,cAAgBC,IAAI,MAC3F,uBAAIH,EAAGI,QACP,uCAAeJ,EAAGK,eAHbL,EAAGM,GADN,OAUzB,C","sources":["API/fetchFilms.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst api_key = '9964dddb79a4e585f42d3b6de3c6326e';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = (path, query='') => {\n    return axios.get(`${path}`, {\n        baseURL,\n        params: {\n            api_key,\n            query\n        },\n    });\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"imgCast\":\"Cast_imgCast__6GiEC\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport css from './Cast.module.css';\n\nimport { fetchFilms } from 'API/fetchFilms';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const {filmId} = useParams();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const { data: { cast } } = await fetchFilms(`/movie/${filmId}/credits`);\n                const topCast = cast.splice(0, 10)\n                setCast(topCast);\n            } catch (error) {\n                console.log(error);\n            };\n        })();\n    }, [filmId]);\n\n\n    return (\n        <div className={css.container}>\n            {cast.length === 0 ? <p>Not information</p> : (<ul>\n                {cast.map((el) => (\n                    <li key={el.id}>\n                        <img className={css.imgCast} src={`https://image.tmdb.org/t/p/w200${el.profile_path}`} alt=\"\" />\n                        <p>{el.name}</p>\n                        <p>Character: {el.character}</p>\n                    </li>\n                ))}\n            </ul>)}\n        </div>\n    );\n};\n\nexport default Cast;"],"names":["api_key","baseURL","fetchFilms","path","query","axios","params","useState","cast","setCast","filmId","useParams","useEffect","data","topCast","splice","console","log","className","css","length","map","el","src","profile_path","alt","name","character","id"],"sourceRoot":""}